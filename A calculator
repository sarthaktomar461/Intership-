<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>A Calculator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #d3d3d3;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      transition: background 0.3s;
    }
    .dark-mode {
      background: #1e1e1e;
      color: #eee;
    }

    .calculator {
      background: white;
      padding: 20px;
      border-radius: 12px;
      border: 3px solid #333;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
      width: 300px;
      text-align: center;
      transition: background 0.3s, color 0.3s;
    }
    .dark-mode .calculator {
      background: #333;
      color: white;
      border-color: white;
    }

    h2 {
      margin-top: 0;
      margin-bottom: 15px;
    }

    #display {
      width: 100%;
      height: 40px;
      font-size: 20px;
      text-align: right;
      margin-bottom: 10px;
      padding-right: 10px;
      box-sizing: border-box;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 10px;
    }

    button {
      padding: 15px;
      font-size: 18px;
      border: none;
      background-color: #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s;
    }
    button:hover {
      background-color: #bbb;
    }

    .equal {
      background-color: #28a745;
      color: white;
    }
    .equal:hover {
      background-color: #218838;
    }

    .clear {
      background-color: #dc3545;
      color: white;
    }
    .clear:hover {
      background-color: #c82333;
    }

    #history {
      margin-top: 15px;
      text-align: left;
      font-size: 14px;
      max-height: 120px;
      overflow-y: auto;
      background: #f9f9f9;
      padding: 10px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }

    .dark-mode #history {
      background: #222;
      color: #eee;
      border-color: #444;
    }

    #toggle-mode {
      margin-bottom: 10px;
      padding: 6px 12px;
      font-size: 14px;
      border-radius: 6px;
      background: #555;
      color: white;
      border: none;
      cursor: pointer;
    }
    #toggle-mode:hover {
      background: #777;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <button id="toggle-mode" onclick="toggleDarkMode()">üåô Dark Mode</button>
    <h2>A Calculator</h2>
    <input type="text" id="display" disabled>
    <div class="buttons">
      <button onclick="clearDisplay()" class="clear">C</button>
      <button onclick="backspace()">‚å´</button>
      <button onclick="appendValue('.')">.</button>
      <button onclick="appendValue('/')">/</button>

      <button onclick="appendValue('7')">7</button>
      <button onclick="appendValue('8')">8</button>
      <button onclick="appendValue('9')">9</button>
      <button onclick="appendValue('*')">*</button>

      <button onclick="appendValue('4')">4</button>
      <button onclick="appendValue('5')">5</button>
      <button onclick="appendValue('6')">6</button>
      <button onclick="appendValue('-')">-</button>

      <button onclick="appendValue('1')">1</button>
      <button onclick="appendValue('2')">2</button>
      <button onclick="appendValue('3')">3</button>
      <button onclick="appendValue('+')">+</button>

      <button onclick="appendValue('0')">0</button>
      <button onclick="calculate()" class="equal">=</button>
    </div>

    <div id="history"><strong>History:</strong><br></div>
  </div>

  <script>
    const display = document.getElementById("display");
    const history = document.getElementById("history");

    function appendValue(value) {
      const lastChar = display.value.slice(-1);
      const operators = "+-*/";

      if (operators.includes(lastChar) && operators.includes(value)) {
        return;
      }
      display.value += value;
    }

    function clearDisplay() {
      display.value = "";
    }

    function backspace() {
      display.value = display.value.slice(0, -1);
    }

    function calculate() {
      try {
        const expression = display.value;
        const result = eval(expression);
        if (result === undefined || isNaN(result)) {
          display.value = "Error";
        } else {
          display.value = result;
          addToHistory(expression + " = " + result);
        }
      } catch {
        display.value = "Error";
      }
    }

    function addToHistory(entry) {
      const para = document.createElement("div");
      para.textContent = entry;
      history.appendChild(para);
      history.scrollTop = history.scrollHeight; // Auto scroll to bottom
    }

    function toggleDarkMode() {
      document.body.classList.toggle("dark-mode");
      const btn = document.getElementById("toggle-mode");
      btn.textContent = document.body.classList.contains("dark-mode") ? "‚òÄÔ∏è Light Mode" : "üåô Dark Mode";
    }

    // Keyboard Support
    document.addEventListener("keydown", function(e) {
      const key = e.key;
      const validKeys = "0123456789+-*/.";

      if (validKeys.includes(key)) {
        appendValue(key);
      } else if (key === "Enter") {
        e.preventDefault();
        calculate();
      } else if (key === "Backspace") {
        backspace();
      } else if (key === "Escape") {
        clearDisplay();
      }
    });
  </script>
</body>
</html>