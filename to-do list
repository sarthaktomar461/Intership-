<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Advanced To-Do List</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #d3d3d3;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .container {
      width: 600px;
      background: #ffffff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
      text-align: center;
      border: 2px solid #555;
    }

    .clock {
      font-size: 18px;
      font-weight: bold;
      color: #333;
      margin-bottom: 15px;
    }

    .input-group {
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }

    input[type="text"] {
      flex: 1;
      padding: 10px;
      font-size: 16px;
      border: 2px solid #00796b;
      border-radius: 5px;
    }

    button {
      margin-left: 10px;
      padding: 10px 16px;
      background-color: #00796b;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #004d40;
    }

    ul {
      list-style-type: none;
      padding: 0;
    }

    li {
      background: #e0e0e0;
      margin-bottom: 15px;
      padding: 12px;
      border-radius: 8px;
      border: 1px solid #333;
    }

    .task-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .task-info {
      flex: 1;
      margin-left: 10px;
      text-align: left;
    }

    .task-time {
      font-size: 12px;
      color: #555;
      margin-top: 5px;
    }

    li.completed span {
      text-decoration: line-through;
      color: grey;
    }

    .actions button {
      margin-left: 5px;
      padding: 5px 10px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="clock" id="clock"></div>

    <h1>üìù My To-Do List</h1>

    <div class="input-group">
      <input type="text" id="taskInput" placeholder="Enter a new task..." />
      <button onclick="addTask()">Add</button>
    </div>

    <ul id="taskList"></ul>
  </div>

  <script>
    function addTask() {
      const input = document.getElementById("taskInput");
      const taskText = input.value.trim();
      if (taskText === "") return;

      const li = document.createElement("li");

      const checkbox = document.createElement("input");
      checkbox.type = "checkbox";

      const span = document.createElement("span");
      span.innerText = taskText;

      const taskInfo = document.createElement("div");
      taskInfo.classList.add("task-info");

      const createdTime = new Date();
      const createdTimeElem = document.createElement("div");
      createdTimeElem.className = "task-time";
      createdTimeElem.innerText = `Added: ${formatTime(createdTime)}`;

      const completedTimeElem = document.createElement("div");
      completedTimeElem.className = "task-time";

      checkbox.onclick = () => {
        li.classList.toggle("completed");
        if (checkbox.checked) {
          const completedTime = new Date();
          completedTimeElem.innerText = `Completed: ${formatTime(completedTime)}`;
        } else {
          completedTimeElem.innerText = "";
        }
      };

      taskInfo.appendChild(span);
      taskInfo.appendChild(createdTimeElem);
      taskInfo.appendChild(completedTimeElem);

      const taskItem = document.createElement("div");
      taskItem.classList.add("task-item");
      taskItem.appendChild(checkbox);
      taskItem.appendChild(taskInfo);

      const actions = document.createElement("div");
      actions.classList.add("actions");

      const editBtn = document.createElement("button");
      editBtn.innerText = "Edit";
      editBtn.onclick = () => editTask(span);

      const deleteBtn = document.createElement("button");
      deleteBtn.innerText = "Delete";
      deleteBtn.onclick = () => li.remove();

      actions.appendChild(editBtn);
      actions.appendChild(deleteBtn);

      li.appendChild(taskItem);
      li.appendChild(actions);

      document.getElementById("taskList").appendChild(li);
      input.value = "";
    }

    function formatTime(date) {
      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });
    }

    function editTask(span) {
      const newTask = prompt("Edit your task:", span.innerText);
      if (newTask !== null && newTask.trim() !== "") {
        span.innerText = newTask;
      }
    }

    function updateClock() {
      const now = new Date();
      document.getElementById("clock").innerText = "üïí " + now.toLocaleTimeString();
    }

    setInterval(updateClock, 1000);
    updateClock();
  </script>
</body>
</html>